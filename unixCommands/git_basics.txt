alias subl="/c/Program\ Files/Sublime\ Text\ 3/sublime_text.exe

git log
git log --all --decorate --oneline --graph
alias gitgraph="git log --all --decorate --oneline --graph"
git status

git branch <branch_name>
git checkout <branch_name>

1. Fast forward merge
git checkout master
git diff master..<branch_name>
git merge <branch_name>
git branch --merged

##delete a branch
git branch -d <branch_name>

 
2. 3 way merge

#master branch
# head : is a pointer and tells what we have checked out


Commands Used:
git log =  git history
git log --all --decorate --oneline --graph = commit history graph
git branch (branch-name) = create a branch
git checkout (branch-name) = checkout a branch/move head pointer
git commit -a -m "commit message" = commit all modified and tracked files in on command (bypass separate 'git add' command)
git diff master..SDN = diff between 2 branches
git merge (branch-name) = merge branches (fast-forward and 3-way merges)
git branch --merged = see branches merged into the current branch
git branch -d (branch-name) = delete a branch, only if already merged
git branch -D (branch-name) = delete a branch, including if not already merged (exercise caution here)
git merge --abort = abort a merge during a merge conflict situation
git checkout (commit-hash) = checkout a commit directly, not through a branch, results in a detached HEAD state
git stash = create a stash point
git stash list = list stash points
git stash list -p = list stash points and show diffs per stash
git stash apply = apply most recent stash
git stash pop = apply most recent stash, and remove it from saved stashes
git stash apply (stash reference) = apply a specific stash point
git stash save "(description)" = create a stash point, be more descriptive

